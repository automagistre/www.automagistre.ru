interface Node {
    id: ID!
}

type Query {
    user: Contacts!
    cars: [Car]!
    works(carId: ID!, after: String, first: Int = 10): WorkConnection!
    recommendations(carId: ID!): [Recommendation]!
}

extend type Query {
    activeCarId: Uuid
}

type Mutation {
    updateUser(input: updateUserInput!): Contacts!
}

input updateUserInput {
    name: String!
    surname: String
    email: Email
}

type Contacts implements Node{
    id: ID!
    name: String!
    surname: String
    mobilePhone: PhoneNumber!
    officePhone: PhoneNumber
    email: Email
}

type Car implements Node{
    id: ID!
    vehicle: Vehicle!
    engine: Engine
    transmission: Transmission
    wheelDrive: WheelDrive
    year: year
    identifier: String!
    gosnomer: String
}

type Engine {
    name: String
    airIntake: AirIntake
    capacity: String
    injection: Injection
    type: Fuel
}

type Manufacturer implements Node {
    id: ID!
    localizedName: String
    name: String
}

type Money {
    amount: String!
    currency: String!
}

type Work implements Node {
    id: ID!
    name: String!
    discount: Money!
    price: Money!
    order: Order!
    parts: [PartItem]!
}

type Order implements Node {
    id: ID!
    number: Int!
    closeDate: Date!
    mileage: Int!
}

type Part implements Node {
    id: ID!
    name: String!
    number: String!
    manufacturer: Manufacturer!
    discount: Money!
    price: Money!
    unit: Unit!
}

type PartItem {
    part: Part!
    quantity: Int!
}

type Recommendation implements Node {
    id: ID!
    name: String!
    price: Money!
    date: Date!
    parts: [PartItem]!
}

type Vehicle implements Node {
    id: ID!
    name: String!
    caseName: String
    localizedName: String
    manufacturer: Manufacturer!
}

type WorkConnection {
    edges: [WorkEges]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PageInfo {
    endCursor: String
    hasNextPage: Boolean!
}

type WorkEges {
    node: Work!
}

enum AirIntake {
    "Атмосферный"
    atmo
    "Турбированный"
    turbo
    "Неопределён"
    unknown
}

enum Fuel {
    "Дизель"
    diesel
    "Электрический"
    electric
    "Этанол"
    ethanol
    "Гибрид"
    hybrid
    "Бензин"
    petrol
    "Неопределён"
    unknown
}

enum Injection {
    "Классический"
    classic
    "Непосредственный впрыск"
    direct
    "Неопределён"
    unknown
}

enum Transmission {
    "Робот"
    AMT
    "Автоматическая"
    AT
    "Автоматическая (5 ступеней)"
    AT5
    "Автоматическая (7 ступеней)"
    AT7
    "Вариатор"
    CVT
    "Механическая"
    MT
    "Неопределена"
    unknown
}

enum WheelDrive {
    "Полный"
    AWD
    "Передний"
    FWD
    "Задний"
    RWD
    "Неопределён"
    unknown
}

enum Unit {
    "Грамм"
    gram
    "Килограмм"
    kilogram
    "Литр"
    liter
    "Метр"
    meter
    "Миллилитр"
    milliliter
    "Миллиметр"
    millimeter
    "Упаковка"
    package
    "Штука"
    thing
}

scalar Date

scalar Uuid

scalar year

scalar PhoneNumber

scalar MoneyInput

scalar Email
